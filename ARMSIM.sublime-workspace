{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sh",
				"shifter"
			],
			[
				"out",
				"Out"
			],
			[
				"r",
				"registerFile"
			],
			[
				"tem",
				"temp"
			],
			[
				"enc",
				"encOut"
			],
			[
				"enco",
				"encoder_OUT"
			],
			[
				"c",
				"condOut"
			],
			[
				"mux",
				"mux_8x1_7_bits"
			],
			[
				"o",
				"Out"
			],
			[
				"z",
				"Z"
			],
			[
				"en",
				"end"
			],
			[
				"b",
				"begin"
			],
			[
				"f",
				"Flags"
			],
			[
				"Contr",
				"ControlSignals"
			],
			[
				"SG",
				"signExtension1Out"
			],
			[
				"SR",
				"SRA"
			],
			[
				"mf",
				"MFC"
			],
			[
				"I",
				"I0"
			],
			[
				"d",
				"DSS"
			],
			[
				"w",
				"WORD"
			],
			[
				"m",
				"misc_sel"
			],
			[
				"end",
				"endmodule"
			],
			[
				"reg",
				"reg_sel"
			],
			[
				"re",
				"reg_sel_out"
			],
			[
				"mis",
				"misc_sel_out"
			],
			[
				"TEM",
				"tempMFC"
			],
			[
				"sRT",
				"SR_Flags_Out"
			],
			[
				"RAM",
				"RW_RAM"
			],
			[
				"S",
				"SRB"
			],
			[
				"Se",
				"SE_EN"
			],
			[
				"SS",
				"SSAB"
			],
			[
				"st",
				"STA"
			],
			[
				"SAL",
				"SALUB"
			],
			[
				"mdr",
				"MDR_EN"
			],
			[
				"cl",
				"CLR"
			],
			[
				"md",
				"MDR_EN"
			],
			[
				"EN",
				"end"
			],
			[
				"C",
				"CIn"
			],
			[
				"O",
				"Out"
			],
			[
				"Data",
				"DataOut"
			],
			[
				"e",
				"registerEnable"
			],
			[
				"da",
				"DataSize"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ARMSIM/shifter.v",
			"settings":
			{
				"buffer_size": 1035,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ARMSIM/test_shifter.v",
			"settings":
			{
				"buffer_size": 781,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "module microprocessor;\n//Las entradas del m√≥dulo deben ser tipo reg\n//Las salidas deben ser tipo wire\nwire  [44: 0] I0;\n//Memory Variables\nreg [31:0] dat[0:255];\nparameter WORD = 2'b10;\nparameter WRITE = 1'b1;\nparameter ENABLE = 1'b0;\nreg [31:0] temp_data_in;\nreg [7:0] temp_addr;\n	wire [31:0] IR_Out;\n	wire [3:0] Flags;\n	reg CLK, CLR, Reset;\n	wire MFC;\n\ncontrol_unit cu (I0[38:7],IR_Out, MFC, CLK, Reset,Flags);\n\ndata_path dp\n(\n	IR_Out,\n	MFC,\n	Flags,\n	CLK,\n	I0[38],//MFA\n	I0[37],//RW_RAM\n	I0[36],//SALU\n	I0[35],//RF_RW\n	I0[34],//SSAB\n	I0[33],//SSOP\n	I0[32],//SMA\n	I0[31],//STA\n	I0[30],//MAR_EN\n	I0[29],//SR_EN\n	I0[28],//MDR_EN\n	I0[27],//IR_EN\n	I0[26],//SHT_EN\n	I0[25],//ISE_EN\n	I0[24],//SGN_EN\n	I0[23],//CLR\n	I0[22:21],//DSS\n	I0[20:19],//WRA\n	I0[18:17],//SRA\n	I0[16:15],//SRB\n	I0[14:13],//SISE\n	I0[12:11],//SALUB\n	I0[10:7]//ALUA\n);\n\n\ninitial $readmemb(\"testcode_arm1.txt\", dat);\n\nreg [8:0] i; // loop index\n\ninitial begin\n//	FILL RAM MEMORY\n	for(i=9'h000;i<9'h0FE;i=i+9'h004)\n\n		begin\n	      	temp_data_in[31:24] = dat[i[7:0]];\n	      	temp_data_in[23:16] = dat[i[7:0]+1];\n	      	temp_data_in[15:8] = dat[i[7:0]+2];\n	      	temp_data_in[7:0] = dat[i[7:0]+3];\n			dp.ram.Mem[i[7:0]] = temp_data_in[31:24];\n	      	dp.ram.Mem[i[7:0]+1]= temp_data_in[23:16];\n	      	dp.ram.Mem[i[7:0]+2] = temp_data_in[15:8];\n	      	dp.ram.Mem[i[7:0]+3] = temp_data_in[7:0];\n	  	end\n		#1490;\n		for(i=9'h000;i<9'h0FE;i=i+9'h004)\n		begin\n			$write (\"WORD at location %d: %b\", i, dp.ram.Mem[i[7:0]]);\n	      	$write (\"%b\", dp.ram.Mem[i[7:0]+1]);\n	      	$write (\"%b\", dp.ram.Mem[i[7:0]+2] );\n	      	$display (\"%b\", dp.ram.Mem[i[7:0]+3]);\n		end\nend\n\ninitial\n	begin\n		CLK = 1;\n		Reset<=0;\n		#5 Reset =1;\n		#1 repeat (500)\n		begin\n			#1 CLK = ~CLK;\n		end\nend\n\ninitial begin\n//$display(\"State\\t IR.Q\\tMAR.Q\\tCLK\\tMFC \");\n//$monitor(\"%d %d %h %h\", cu.rom.index, dp.instructionRegister.Q, dp.memoryAddressRegister.Q,  dp.statusRegister.Q);\n//$monitor(\"%d\\t %b %d %d %d\", cu.rom.index, dp.instructionRegister.Q, dp.instructionRegister.LE, CLK, I0[27] );\n$monitor(\"MAR: %d\", dp.memoryAddressRegister.Q);\n//$monitor(\"%b %b %b %b  %b\",dp.SHT_EN, dp.shifterOperand, dp.shifterOut,  dp.shifterAmountShift,  dp.STA, dp.irOut[6:5]);\n//$monitor(\"%h %b %h %b %b %b %b\", dp.shifter1.Out, dp.shifter1.Cout, dp.shifter1.Operand, dp.shifter1.Amount, dp.shifter1.CIn, dp.shifter1.EN, dp.shifter1.STA,  dp.shifter1.IR);\n//$monitor(\"%b\", dp.instructionRegister.Q);\n//$monitor(\"MAR: %d, Flags %b\", dp.memoryAddressRegister.Q, Flags);\n//$monitor(\"%d, %d, %b\", dp.memoryAddressRegister.Q, cu.rom.index, Flags);\n//$monitor(\"S:%d R1_Q= %d R11_Q= %d MAR:%d \", cu.rom.index, dp.registerFile.R1.Q, dp.registerFile.R11.Q,  dp.memoryAddressRegister.Q);//\", dp.memoryAddressRegister.Q );\n\nend\n/*always@(*)\nbegin\nif(dp.SHT_EN & (dp.shifterAmountShift != 0))\nbegin\n$display(\"\\tPC\\tState\\tSHT_EN\\tOp\\tOut\\tAmount\\tSTA\\tSType\");\n$display(\"\\n%d|%d|%h|%h|%h|%d|%d|%h\", dp.registerFile.R15.Q, cu.rom.index, dp.SHT_EN, dp.shifterOperand, dp.shifterOut,  dp.shifterAmountShift,  dp.STA, dp.irOut[6:5]);\nend\nend*/\n\n\n/*initial begin\n//$monitor(\"MAR: %d, Flags %b\", dp.memoryAddressRegister.Q, Flags);\n$monitor(\"MAR: %d, Flags %b R00= %d\\nR01= %d\\nR02= %d\\nR03= %d\\nR04= %d\\nR05= %d\\nR06= %d\\nR07= %d\\nR08= %d\\nR09= %d\\nR10= %d\\nR11= %d\\nR12= %d\\nR13= %d\\nR14= %d\\nR15= %d\\n shifter op=%b == %b\\n\\nSSOP:%b SHO:%b IM:%b S:%d %b==%b %b %b \\n\",\n	dp.memoryAddressRegister.Q, Flags,\n	dp.registerFile.R0.Q,\n	dp.registerFile.R1.Q,\n	dp.registerFile.R2.Q,\n	dp.registerFile.R3.Q,\n	dp.registerFile.R4.Q,\n	dp.registerFile.R5.Q,\n	dp.registerFile.R6.Q,\n	dp.registerFile.R7.Q,\n	dp.registerFile.R8.Q,\n	dp.registerFile.R9.Q,\n	dp.registerFile.R10.Q,\n	dp.registerFile.R11.Q,\n	dp.registerFile.R12.Q,\n	dp.registerFile.R13.Q,\n	dp.registerFile.R14.Q,\n	dp.registerFile.R15.Q,\n	dp.addressBin,\n	dp.irOut[3:0], dp.SSOP, dp.shifterOperand, dp.immSignExtOut, cu.rom.index, dp.SRB, I0[16:15], dp.irOut[19:16], dp.irOut[15:12], dp. irOut[3:0]\n	);\n//$display(\"\\nSSOP:%b SHO:%b IM:%b S:%d %b==%b %b %b \\n\", dp.SSOP, dp.shifterOperand, dp.immSignExtOut, cu.rom.index, dp.SRB, I0[16:15], dp.irOut[19:16], dp.irOut[15:12], dp. irOut[3:0]);\nend*/\nendmodule\n",
			"file": "ARMSIM/microprocessor.v",
			"file_size": 4295,
			"file_write_time": 131070366384884717,
			"settings":
			{
				"buffer_size": 4155,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ARMSIM/microstore_rom.v",
			"settings":
			{
				"buffer_size": 7026,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ARMSIM/register_file.v",
			"settings":
			{
				"buffer_size": 2815,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ARMSIM/encoder.v",
			"settings":
			{
				"buffer_size": 4973,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "and	r0, r1, #0\norr	r1, r0, #34	; 0x22\norr	r4, r0, #152	; 0x98\nmov	sl, r4\nldr	r3, [sl], #4\nadd	r2, r1, r3\nmov	r5, r2\nstr	r5, [sl], #4\nsub	r5, r1, r2\nstr	r5, [sl], #4\nrsb	r5, r1, r2\nstr	r5, [sl], #4\nadd	r5, r0, r3, asr #3\nstr	r5, [sl], #4\nadd	r5, r0, r3, lsl #3\nstr	r5, [sl], #4\nadd	r5, r0, r3, ror #10\nstr	r5, [sl], #4\ncmp	r2, r1\nblle	0x00000058\nand	lr, r1, #0\nstr	lr, [sl], #4\nldr	ip, [r4, #-4]!\nldr	fp, [r4, #-4]!\ncmn	ip, fp\nbvs	0x00000070\nand	r5, r1, #0\nstr	r5, [sl], #4\nadd	r5, r1, fp\nbvs	0x00000080\nand	r5, r1, #0\nstr	r5, [sl], #4\norr	r1, r0, #4\nldr	ip, [sl, -r1]!\nstr	ip, [sl, r1]!\nb	0x00000090",
			"settings":
			{
				"buffer_size": 599,
				"line_ending": "Windows",
				"name": "and	r0, r1, #0"
			}
		},
		{
			"file": "ARMSIM/compiling scripts",
			"settings":
			{
				"buffer_size": 2064,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ARMSIM/data_path.v",
			"settings":
			{
				"buffer_size": 2404,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 360.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Enable Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 405.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Development/ARMSIM/ARMSIM"
	],
	"file_history":
	[
		"/C/Users/AbisaiRamosRodriguez/Downloads/Test2Output.txt",
		"/C/Users/AbisaiRamosRodriguez/Downloads/theproject.v",
		"/C/Development/ARMSIM/ARMSIM/microstore_rom.v",
		"/C/Development/ARMSIM/ARMSIM/data_path.v",
		"/C/Development/ARMSIM/ARMSIM/condition_check.v",
		"/C/Development/ARMSIM/ARMSIM/mux_4x1_4.v",
		"/C/Development/ARMSIM/ARMSIM/shifter.v",
		"/C/Development/ARMSIM/ARMSIM/test_shifter.v",
		"/C/Users/AbisaiRamosRodriguez/Downloads/ARM_Modules/Modules/BS.v",
		"/C/Users/AbisaiRamosRodriguez/Downloads/ARM_Modules/Modules/CPU.v",
		"/C/Users/AbisaiRamosRodriguez/Downloads/ARM_Modules/Modules/pc.v",
		"/C/Development/ARMSIM/ARMSIM/ut",
		"/C/Development/ARMSIM/ARMSIM/microprocessor.v",
		"/C/Users/AbisaiRamosRodriguez/Downloads/data2.bin",
		"/C/Development/ARMSIM/ARMSIM/alu_arm.v",
		"/C/Users/AbisaiRamosRodriguez/Downloads/testcode_arm2_decoded.txt",
		"/C/Development/ARMSIM/ARMSIM/compiling scripts",
		"/C/Development/ARMSIM/ARMSIM/test_data_path.v",
		"/C/Development/ARMSIM/ARMSIM/encoder.v",
		"/C/Development/ARMSIM/ARMSIM/theproject.v",
		"/C/Development/ARMSIM/ARMSIM/control_unit.v",
		"/C/Development/ARMSIM/ARMSIM/testcode_arm2.txt",
		"/C/Development/ARMSIM/ARMSIM/next_state_add_sel.v",
		"/C/Development/ARMSIM/ARMSIM/incrementor.v",
		"/C/Development/ARMSIM/ARMSIM/data_size_selector.v",
		"/C/Development/ARMSIM/ARMSIM/inverter.v",
		"/C/Development/ARMSIM/ARMSIM/testcode_arm1.txt",
		"/C/Development/ARMSIM/ARMSIM/sign_extension.v",
		"/C/Development/ARMSIM/ARMSIM/Test1_Output.txt",
		"/C/Development/ARMSIM/ARMSIM/test_control_unit.v",
		"/C/Users/AbisaiRamosRodriguez/Desktop/PSPICE Projects/TTL_XOR.out",
		"/C/Development/ARMSIM/ARMSIM/test_data.txt",
		"/C/Development/ARMSIM/ARMSIM/ram_256.v",
		"/C/Users/AbisaiRamosRodriguez/Desktop/Proyectos/802090664",
		"/C/Development/ARMSIM/ARMSIM/register_32_bits.v",
		"/C/Development/ARMSIM/ARMSIM/register_file.v",
		"/C/Development/ARMSIM/ARMSIM/test_encoder.v",
		"/C/Development/ARMSIM/ARMSIM/mux_4x1_cu.v",
		"/C/Development/ARMSIM/ARMSIM/test_cu.v",
		"/C/Development/ARMSIM/ARMSIM/test_inv2.v",
		"/C/Development/ARMSIM/ARMSIM/test_encoder2.v",
		"/C/Development/ARMSIM/ARMSIM/test_rom2.v",
		"/C/Development/ARMSIM/ARMSIM/rom.v",
		"/C/Users/AbisaiRamosRodriguez/Downloads/testcode_arm1.txt",
		"/C/Development/ARMSIM/ARMSIM/test_code.csv",
		"/C/Users/AbisaiRamosRodriguez/Downloads/ARM SIM State Table - Encoder Fix.csv",
		"/C/Development/ARMSIM/ARMSIM/pipeline_register.v",
		"/C/Development/ARMSIM/ARMSIM/seven_bit_register.v",
		"/C/Development/ARMSIM/ARMSIM/mux_8x1_7_bits.v",
		"/C/Development/ARMSIM/ARMSIM/mux_4x1.v",
		"/C/Development/ARMSIM/ARMSIM/mux_2x1_7_bits.v",
		"/C/Development/ARMSIM/ARMSIM/mux_2x1_4.v",
		"/C/Development/ARMSIM/ARMSIM/mux_2x1.v",
		"/C/Development/ARMSIM/ARMSIM/mux_16x1.v",
		"/C/Development/ARMSIM/ARMSIM/immediate_sign_extension.v",
		"/C/Development/ARMSIM/ARMSIM/decoder_4x16.v",
		"/C/Development/ARMSIM/ARMSIM/branch_ext.v",
		"/C/Development/ARMSIM/ARMSIM/amount_selector.v",
		"/C/Development/ARMSIM/ARMSIM/Encoder.v",
		"/C/Development/ARMSIM/ARMSIM/Encoder States",
		"/C/Development/ARMSIM/ARMSIM/test_register_32_bits.v",
		"/C/Users/AbisaiRamosRodriguez/Downloads/codeProject.txt",
		"/C/Development/ARMSIM/ARMSIM/test_sign_extension.v",
		"/C/Development/ARMSIM/ARMSIM/test_mux_2x1.v",
		"/C/Development/ARMSIM/ARMSIM/Pipeline_Register.v",
		"/C/Development/ARMSIM/ARMSIM/test_data_size_sel.v",
		"/C/Users/AbisaiRamosRodriguez/Desktop/DataPath.v",
		"/C/Development/ARMSIM/ARMSIM/test_ram_256.v",
		"/C/Development/ARMSIM/ARMSIM/test_register_file.v",
		"/C/Development/ARMSIM/ARMSIM/test_signExtension.v",
		"/C/Development/ARMSIM/ARMSIM/signExtension.v",
		"/C/Development/ARMSIM/ARMSIM/shifter.sv",
		"/C/Development/ARMSIM/ARMSIM/Branch_Ext.v",
		"/C/Development/ARMSIM/ARMSIM/test_branch_ext.v",
		"/C/Development/ARMSIM/ARMSIM/dataPath.v",
		"/C/Development/ARMSIM/ARMSIM/test_amount_selector.v",
		"/C/Development/ARMSIM/ARMSIM/test_mux_4x1.v",
		"/C/Development/ARMSIM/ARMSIM/Shifter.sv",
		"/C/Development/ARMSIM/ARMSIM/test_immediate_sign_ext.v",
		"/C/Development/ARMSIM/ARMSIM/test_dec_4x16.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/decoder_4x16.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_register_file.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/register_32_bits.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/register_file.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/compiling scripts",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_dec_4x16.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/mux_4x1.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_ram_256.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/mux_2x1.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/mux_16x1.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_alu_arm.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_mux_4x1.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_dec_2x4.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/alu_arm.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_mux_16x1.v",
		"/C/Users/Abisai/Desktop/ARM-SIM/ARMSIM/mux_16x1.v",
		"/C/Users/Abisai/Desktop/ARM-SIM/ARMSIM/decoder_4x16.v",
		"/C/Users/Abisai/Downloads/Verilog.sublime-package"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"250",
			"<=",
			"Shifter",
			"rsr",
			"0101100",
			"f",
			"e",
			"d",
			"c",
			"b",
			"a",
			"b",
			"a",
			"f",
			"c",
			"d",
			"e",
			" = ",
			" <= ",
			"EN",
			"mem",
			"MAS",
			"dataIn",
			"address",
			"readWrite",
			"enable",
			"done",
			"dataOut",
			"11100111 11010001 00100000 11100101",
			"11100111110100010010000011100101",
			" = ",
			"ALU",
			"alu",
			"ramdummyreadfile",
			"0101101",
			"%d",
			"B",
			"if(tempIR_IN[23]==0) encoder_OUT = 7'b0101101;\n						else encoder_OUT = 7'b0101111;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b0110001;\n						else encoder_OUT = 7'b0110011;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b0110100;\n						else encoder_OUT = 7'b0110110;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b0111000;\n						else encoder_OUT = 7'b0111010;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b0111011;\n						else encoder_OUT = 7'b0111100;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b0111101;\n						else encoder_OUT = 7'b0111110;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b0111111;\n						else encoder_OUT = 7'b1000001;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b1000011;\n						else encoder_OUT = 7'b1000101;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b1000110;\n						else encoder_OUT = 7'b1001000;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b1001010;\n						else encoder_OUT = 7'b1001100;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b1001101;\n						else encoder_OUT = 7'b1001110;\nif(tempIR_IN[23]==0) encoder_OUT = 7'b1001111;\n						else encoder_OUT = 7'b1010000;",
			"registerFile",
			"001101110000001111000110000000000000000000000",
			"101100000000001111000100000000000000001011011",
			"44'",
			"11100010_00000001_00000000_00000000",
			" ",
			"Signed Store Register Post",
			"Signed Store Immediate Post",
			"0110110",
			"b010011",
			"signed store register post",
			"signed store",
			"signed store registe",
			"signed store register post",
			"signeg store",
			"0110100",
			"6'b111011",
			"0110110",
			"0110100",
			"0110110",
			"%d",
			"Signed Store Register",
			"Signed Store Register Post",
			"Signed Store Register Post-indexed",
			"B",
			"1001110",
			"B",
			"#10 I = ",
			"I,",
			"(I",
			"B",
			"=%b I",
			"B",
			"b'",
			"if(tempIR_IN[24]==0)",
			"1'b1,1'b1",
			"0111101",
			"b0111110",
			"0111110",
			"IncrIn",
			"IrOut",
			"monitor",
			"SMA",
			"<=",
			".Y",
			"dp_test.regf.register",
			"param_256eter",
			"ram",
			"dp_test",
			"2",
			"word",
			"RAM",
			"IR<=32'b11100001111001100101101111011110;",
			"counter",
			"always",
			"ns",
			"sts",
			"SE_EN",
			"RF_CLR",
			"MUN",
			"ISO",
			"SHIFTER_EN",
			"aluFlagsOut",
			"D",
			"Q",
			"C_flag",
			"enable",
			"data",
			"shiftNum",
			"shifter_operand",
			"Rm",
			"enable",
			"CoutFlag",
			"carry",
			"Y",
			"=",
			"OUT",
			"Y",
			"signEN",
			"imme_SEL",
			"#99",
			".Y",
			"register",
			"regtb",
			"enbale"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"=",
			"F",
			"E",
			"D",
			"C",
			"B",
			"A",
			"B",
			"A",
			"F",
			"C",
			"D",
			"E",
			" <=  ",
			" <= ",
			" = ",
			"LE",
			"Mem",
			"DataSize",
			"DataIn",
			"Address",
			"ReadWrite",
			"Enable",
			"MFC",
			"DataOut",
			" <= ",
			"%b",
			"x",
			"45'",
			"_",
			"%b",
			"x",
			"#10 I <= ",
			"I,7'b",
			"I,7b'",
			"(\"I",
			"x",
			"=%b\", I",
			"=%b\" I",
			"x",
			"'b",
			"if(tempIR_IN[23]==0)",
			"tempIR_IN[7],tempIR_IN[4]",
			"IncrOut",
			"IncRegOut",
			"display",
			"=",
			".outR0",
			"dp.registerFile.R",
			"parameter",
			"ram_256",
			"dp",
			"3",
			"IR<=32'b111000001111001100101101111011110;",
			"DSS",
			"always@",
			"NS",
			"Sts",
			"ISE_EN",
			"STA",
			"SHT_EN",
			"SR_Flags_Out",
			"In",
			"Out",
			"CIn",
			"CIN",
			"EN",
			"Operand",
			"Amount",
			"Operand",
			"EN",
			"CIn",
			"Cout",
			"Out",
			"<=",
			"Out",
			"EN",
			"SISE",
			"#64",
			".Q",
			"R",
			"registerFile"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ARMSIM/shifter.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1035,
						"regions":
						{
						},
						"selection":
						[
							[
								788,
								791
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 124.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "ARMSIM/test_shifter.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 781,
						"regions":
						{
						},
						"selection":
						[
							[
								623,
								623
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "ARMSIM/microprocessor.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4155,
						"regions":
						{
						},
						"selection":
						[
							[
								1628,
								1628
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 744.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "ARMSIM/microstore_rom.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7026,
						"regions":
						{
						},
						"selection":
						[
							[
								6868,
								6868
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage"
						},
						"translation.x": -0.0,
						"translation.y": 673.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "ARMSIM/register_file.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2815,
						"regions":
						{
						},
						"selection":
						[
							[
								1452,
								1452
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "ARMSIM/encoder.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4973,
						"regions":
						{
						},
						"selection":
						[
							[
								610,
								610
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 775.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 599,
						"regions":
						{
						},
						"selection":
						[
							[
								502,
								502
							]
						],
						"settings":
						{
							"auto_name": "and	r0, r1, #0",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "ARMSIM/compiling scripts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2064,
						"regions":
						{
						},
						"selection":
						[
							[
								2064,
								58
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "ARMSIM/data_path.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2404,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 806.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 23.0
	},
	"pinned_build_system": "",
	"project": "ARMSIM.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 186.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
