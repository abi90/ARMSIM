{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"c",
				"condOut"
			],
			[
				"mux",
				"mux_8x1_7_bits"
			],
			[
				"o",
				"Out"
			],
			[
				"z",
				"Z"
			],
			[
				"en",
				"end"
			],
			[
				"b",
				"begin"
			],
			[
				"f",
				"Flags"
			],
			[
				"Contr",
				"ControlSignals"
			],
			[
				"SG",
				"signExtension1Out"
			],
			[
				"SR",
				"SRA"
			],
			[
				"mf",
				"MFC"
			],
			[
				"I",
				"I0"
			],
			[
				"d",
				"DSS"
			],
			[
				"w",
				"WORD"
			],
			[
				"m",
				"misc_sel"
			],
			[
				"end",
				"endmodule"
			],
			[
				"reg",
				"reg_sel"
			],
			[
				"re",
				"reg_sel_out"
			],
			[
				"mis",
				"misc_sel_out"
			],
			[
				"TEM",
				"tempMFC"
			],
			[
				"sRT",
				"SR_Flags_Out"
			],
			[
				"RAM",
				"RW_RAM"
			],
			[
				"S",
				"SRB"
			],
			[
				"Se",
				"SE_EN"
			],
			[
				"SS",
				"SSAB"
			],
			[
				"st",
				"STA"
			],
			[
				"SAL",
				"SALUB"
			],
			[
				"mdr",
				"MDR_EN"
			],
			[
				"cl",
				"CLR"
			],
			[
				"md",
				"MDR_EN"
			],
			[
				"EN",
				"end"
			],
			[
				"C",
				"CIn"
			],
			[
				"O",
				"Out"
			],
			[
				"Data",
				"DataOut"
			],
			[
				"e",
				"registerEnable"
			],
			[
				"r",
				"registerEnable"
			],
			[
				"da",
				"DataSize"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ARMSIM/condition_check.v",
			"settings":
			{
				"buffer_size": 2364,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ARMSIM/control_unit.v",
			"settings":
			{
				"buffer_size": 1067,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ARMSIM/next_state_add_sel.v",
			"settings":
			{
				"buffer_size": 636,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ARMSIM/Encoder.v",
			"settings":
			{
				"buffer_size": 5060,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ARMSIM/Encoder States",
			"settings":
			{
				"buffer_size": 153,
				"line_ending": "Windows",
				"name": "4"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 360.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Enable Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 405.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Development/ARMSIM/ARMSIM"
	],
	"file_history":
	[
		"/C/Development/ARMSIM/ARMSIM/mux_2x1_7_bits.v",
		"/C/Development/ARMSIM/ARMSIM/test_data_path.v",
		"/C/Development/ARMSIM/ARMSIM/alu_arm.v",
		"/C/Development/ARMSIM/ARMSIM/data_path.v",
		"/C/Development/ARMSIM/ARMSIM/incrementor.v",
		"/C/Development/ARMSIM/ARMSIM/test_register_32_bits.v",
		"/C/Development/ARMSIM/ARMSIM/condition_check.v",
		"/C/Users/AbisaiRamosRodriguez/Downloads/theproject.v",
		"/C/Development/ARMSIM/ARMSIM/compiling scripts",
		"/C/Development/ARMSIM/ARMSIM/control_unit.v",
		"/C/Development/ARMSIM/ARMSIM/test_control_unit.v",
		"/C/Development/ARMSIM/ARMSIM/rom.v",
		"/C/Development/ARMSIM/ARMSIM/register_32_bits.v",
		"/C/Users/AbisaiRamosRodriguez/Downloads/codeProject.txt",
		"/C/Development/ARMSIM/ARMSIM/test_sign_extension.v",
		"/C/Development/ARMSIM/ARMSIM/ram_256.v",
		"/C/Development/ARMSIM/ARMSIM/test_mux_2x1.v",
		"/C/Development/ARMSIM/ARMSIM/Pipeline_Register.v",
		"/C/Development/ARMSIM/ARMSIM/mux_2x1.v",
		"/C/Development/ARMSIM/ARMSIM/data_size_selector.v",
		"/C/Development/ARMSIM/ARMSIM/next_state_add_sel.v",
		"/C/Development/ARMSIM/ARMSIM/seven_bit_register.v",
		"/C/Development/ARMSIM/ARMSIM/test_data_size_sel.v",
		"/C/Development/ARMSIM/ARMSIM/test_data.txt",
		"/C/Development/ARMSIM/ARMSIM/Encoder.v",
		"/C/Development/ARMSIM/ARMSIM/branch_ext.v",
		"/C/Users/AbisaiRamosRodriguez/Desktop/DataPath.v",
		"/C/Development/ARMSIM/ARMSIM/test_ram_256.v",
		"/C/Development/ARMSIM/ARMSIM/test_register_file.v",
		"/C/Development/ARMSIM/ARMSIM/shifter.v",
		"/C/Development/ARMSIM/ARMSIM/sign_extension.v",
		"/C/Development/ARMSIM/ARMSIM/test_signExtension.v",
		"/C/Development/ARMSIM/ARMSIM/signExtension.v",
		"/C/Development/ARMSIM/ARMSIM/shifter.sv",
		"/C/Development/ARMSIM/ARMSIM/register_file.v",
		"/C/Development/ARMSIM/ARMSIM/Branch_Ext.v",
		"/C/Development/ARMSIM/ARMSIM/test_branch_ext.v",
		"/C/Development/ARMSIM/ARMSIM/dataPath.v",
		"/C/Development/ARMSIM/ARMSIM/amount_selector.v",
		"/C/Development/ARMSIM/ARMSIM/test_amount_selector.v",
		"/C/Development/ARMSIM/ARMSIM/test_mux_4x1.v",
		"/C/Development/ARMSIM/ARMSIM/immediate_sign_extension.v",
		"/C/Development/ARMSIM/ARMSIM/Shifter.sv",
		"/C/Development/ARMSIM/ARMSIM/test_immediate_sign_ext.v",
		"/C/Development/ARMSIM/ARMSIM/test_dec_4x16.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/decoder_4x16.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_register_file.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/register_32_bits.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/register_file.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/compiling scripts",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_dec_4x16.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/mux_4x1.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_ram_256.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/mux_2x1.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/mux_16x1.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_alu_arm.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_mux_4x1.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_dec_2x4.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/alu_arm.v",
		"/C/Users/Abisai/Desktop/ARMSIM/ARMSIM/test_mux_16x1.v",
		"/C/Users/Abisai/Desktop/ARM-SIM/ARMSIM/mux_16x1.v",
		"/C/Users/Abisai/Desktop/ARM-SIM/ARMSIM/decoder_4x16.v",
		"/C/Users/Abisai/Downloads/Verilog.sublime-package"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"IncrIn",
			"IrOut",
			"monitor",
			"SMA",
			"<=",
			".Y",
			"dp_test.regf.register",
			"param_256eter",
			"ram",
			"dp_test",
			"2",
			"word",
			"RAM",
			"IR<=32'b11100001111001100101101111011110;",
			"counter",
			"always",
			"ns",
			"sts",
			"SE_EN",
			"RF_CLR",
			"MUN",
			"ISO",
			"SHIFTER_EN",
			"aluFlagsOut",
			"D",
			"Q",
			"C_flag",
			"enable",
			"data",
			"shiftNum",
			"shifter_operand",
			"Rm",
			"enable",
			"CoutFlag",
			"carry",
			"Y",
			"=",
			"OUT",
			"Y",
			"signEN",
			"imme_SEL",
			"#99",
			".Y",
			"register",
			"regtb",
			"enbale"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"IncrOut",
			"IncRegOut",
			"display",
			"=",
			".outR0",
			"dp.registerFile.R",
			"parameter",
			"ram_256",
			"dp",
			"3",
			"IR<=32'b111000001111001100101101111011110;",
			"DSS",
			"always@",
			"NS",
			"Sts",
			"ISE_EN",
			"STA",
			"SHT_EN",
			"SR_Flags_Out",
			"In",
			"Out",
			"CIn",
			"CIN",
			"EN",
			"Operand",
			"Amount",
			"Operand",
			"EN",
			"CIn",
			"Cout",
			"Out",
			"<=",
			"Out",
			"EN",
			"SISE",
			"#64",
			".Q",
			"R",
			"registerFile"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ARMSIM/condition_check.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2364,
						"regions":
						{
						},
						"selection":
						[
							[
								896,
								896
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "ARMSIM/control_unit.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1067,
						"regions":
						{
						},
						"selection":
						[
							[
								359,
								359
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage"
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "ARMSIM/next_state_add_sel.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 636,
						"regions":
						{
						},
						"selection":
						[
							[
								356,
								384
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "ARMSIM/Encoder.v",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5060,
						"regions":
						{
						},
						"selection":
						[
							[
								3691,
								3697
							]
						],
						"settings":
						{
							"syntax": "Packages/Verilog/verilog.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2445.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "ARMSIM/Encoder States",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 153,
						"regions":
						{
						},
						"selection":
						[
							[
								152,
								0
							]
						],
						"settings":
						{
							"auto_name": "4",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ARMSIM.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 256.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
